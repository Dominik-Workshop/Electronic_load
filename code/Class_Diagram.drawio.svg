<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1221px" height="614px" viewBox="-0.5 -0.5 1221 614" content="&lt;mxfile&gt;&lt;diagram id=&quot;M2BFBASVa4sEkwWjOiuD&quot; name=&quot;Strona-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-4-31-192-64-0"><rect x="4" y="31" width="192" height="64"/></clipPath><clipPath id="mx-clip-4-103-192-112-0"><rect x="4" y="103" width="192" height="112"/></clipPath><clipPath id="mx-clip-214-31-172-54-0"><rect x="214" y="31" width="172" height="54"/></clipPath><clipPath id="mx-clip-214-93-172-122-0"><rect x="214" y="93" width="172" height="122"/></clipPath><clipPath id="mx-clip-404-31-232-194-0"><rect x="404" y="31" width="232" height="194"/></clipPath><clipPath id="mx-clip-404-233-232-92-0"><rect x="404" y="233" width="232" height="92"/></clipPath><clipPath id="mx-clip-404-401-232-114-0"><rect x="404" y="401" width="232" height="114"/></clipPath><clipPath id="mx-clip-404-523-232-82-0"><rect x="404" y="523" width="232" height="82"/></clipPath><clipPath id="mx-clip-4-251-192-64-0"><rect x="4" y="251" width="192" height="64"/></clipPath><clipPath id="mx-clip-4-323-192-182-0"><rect x="4" y="323" width="192" height="182"/></clipPath><clipPath id="mx-clip-654-341-252-84-0"><rect x="654" y="341" width="252" height="84"/></clipPath><clipPath id="mx-clip-654-433-252-42-0"><rect x="654" y="433" width="252" height="42"/></clipPath><clipPath id="mx-clip-954-31-262-114-0"><rect x="954" y="31" width="262" height="114"/></clipPath><clipPath id="mx-clip-954-153-262-142-0"><rect x="954" y="153" width="262" height="142"/></clipPath><clipPath id="mx-clip-954-331-262-104-0"><rect x="954" y="331" width="262" height="104"/></clipPath><clipPath id="mx-clip-954-443-262-172-0"><rect x="954" y="443" width="262" height="172"/></clipPath><clipPath id="mx-clip-654-31-282-114-0"><rect x="654" y="31" width="282" height="114"/></clipPath><clipPath id="mx-clip-654-153-282-152-0"><rect x="654" y="153" width="282" height="152"/></clipPath></defs><g><path d="M 0 26 L 0 0 L 200 0 L 200 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 26 L 0 210 L 200 210 L 200 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 200 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="17.5">DacCalibration</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-31-192-64-0)" font-size="12px"><text x="5.5" y="43.5">-setCurrentMultiplier: int</text><text x="5.5" y="57.5">-setCurrentOffset: int</text></g><path d="M 0 94 L 200 94" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-103-192-112-0)" font-size="12px"><text x="5.5" y="115.5">+readFromEEPROM(): void</text><text x="5.5" y="129.5">+writeToEEPROM(): void</text><text x="5.5" y="157.5">+ getSetCurrentMultiplier(): int</text><text x="5.5" y="171.5">+ getSetCurrentOffset(): int</text><text x="5.5" y="185.5">+ setSetCurrentMultiplier(int): void</text><text x="5.5" y="199.5">+ setSetCurrentOffset(int): void</text></g><path d="M 210 26 L 210 0 L 390 0 L 390 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 210 26 L 210 210 L 390 210 L 390 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 210 26 L 390 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="299.5" y="17.5">Encoder</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-214-31-172-54-0)" font-size="12px"><text x="215.5" y="43.5">-counter: volatile int</text><text x="215.5" y="57.5">-buttonPressed: volatile bool</text><text x="215.5" y="71.5">-instance: *Encoder</text></g><path d="M 210 84 L 390 84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-214-93-172-122-0)" font-size="12px"><text x="215.5" y="105.5">+begin(): void</text><text x="215.5" y="119.5">+reset(): void</text><text x="215.5" y="133.5">+wasButtonPressed(): bool</text><text x="215.5" y="147.5">+rotation(): int</text><text x="215.5" y="161.5">-isrRotation(): void</text><text x="215.5" y="175.5">-isrButton(): void</text><text x="215.5" y="189.5">-handleInterruptRotation(): void</text><text x="215.5" y="203.5">-handleInterruptButton(): void</text></g><path d="M 400 26 L 400 0 L 640 0 L 640 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 26 L 400 320 L 640 320 L 640 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 26 L 640 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="519.5" y="17.5">UserInput</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-404-31-232-194-0)" font-size="12px"><text x="405.5" y="43.5">+ setCurrent: SetValue</text><text x="405.5" y="57.5">+ setPower: SetValue</text><text x="405.5" y="71.5">+ setResistance: SetValue</text><text x="405.5" y="99.5">+ key: char</text><text x="405.5" y="113.5">+ decimalPlace: DecimalPlaces</text><text x="405.5" y="127.5">+ cursorPosX: int</text><text x="405.5" y="141.5">+ cursorPosY: int</text><text x="405.5" y="155.5">+ time: uint32_t</text><text x="405.5" y="169.5">- numbers[]: char</text><text x="405.5" y="183.5">- decimalPointPresent: bool</text><text x="405.5" y="197.5">- index: int</text><text x="405.5" y="211.5">- x_pos: int</text></g><path d="M 400 224 L 640 224" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-404-233-232-92-0)" font-size="12px"><text x="405.5" y="245.5">+ inputFromKeypad(&amp;LiquidCrystal_I2C,</text><text x="405.5" y="259.5">     &amp;SetValue, int, int): void</text><text x="405.5" y="273.5">+ resetKeypadInput(): void</text><text x="405.5" y="287.5">+ checkEncoder(&amp;LiquidCrystal_I2C,</text><text x="405.5" y="301.5">    &amp;SetValue, &amp;Encoder, int, int):void</text><text x="405.5" y="315.5">+ UserInput()</text></g><path d="M 400 396 L 400 370 L 640 370 L 640 396" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 396 L 400 600 L 640 600 L 640 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 396 L 640 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="519.5" y="387.5">SetValue</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-404-401-232-114-0)" font-size="12px"><text x="405.5" y="413.5">+ value: float</text><text x="405.5" y="427.5">+ maxDecimalPlace: DecimalPlaces</text><text x="405.5" y="441.5">+ minDecimalPlace: DecimalPlaces</text><text x="405.5" y="455.5">-numOfDigits: int</text><text x="405.5" y="469.5">-numOfDecimalPlaces: int</text><text x="405.5" y="483.5">-maxValue: float</text><text x="405.5" y="497.5">-minValue: float</text></g><path d="M 400 514 L 640 514" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-404-523-232-82-0)" font-size="12px"><text x="405.5" y="535.5">+init(digits: int, decimals: int,</text><text x="405.5" y="549.5">        min: float, max: float, </text><text x="405.5" y="563.5">        init_value: float): void</text><text x="405.5" y="577.5">+display(lcd: LiquidCrystal_I2C &amp;): void</text><text x="405.5" y="591.5">+limit(): void</text></g><path d="M 520 354.01 L 520 349.51 Q 520 345 520.1 335 L 520.24 320.09" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 520 369.01 L 515.59 361.51 L 520 354.01 L 524.41 361.51 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 367px; margin-left: 528px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">3</div></div></div></foreignObject><text x="528" y="367" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">3</text></switch></g><path d="M 0 246 L 0 220 L 200 220 L 200 246" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 246 L 0 500 L 200 500 L 200 246" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 246 L 200 246" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="237.5">AdcCalibration</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-251-192-64-0)" font-size="12px"><text x="5.5" y="263.5">- voltageMultiplier: int</text><text x="5.5" y="277.5">- voltageOffset: int</text><text x="5.5" y="291.5">- currentMultiplier: int</text><text x="5.5" y="305.5">- currentOffset: int</text></g><path d="M 0 314 L 200 314" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-323-192-182-0)" font-size="12px"><text x="5.5" y="335.5">+readFromEEPROM(): void</text><text x="5.5" y="349.5">+writeToEEPROM(): void</text><text x="5.5" y="377.5">+ getVoltageMultiplier(): int</text><text x="5.5" y="391.5">+ getVoltageOffset(): int</text><text x="5.5" y="405.5">+ getCurrentMultiplier(): int</text><text x="5.5" y="419.5">+ getCurrentOffset(): int</text><text x="5.5" y="447.5">+ setVoltageMultiplier(int): void</text><text x="5.5" y="461.5">+ setVoltageOffset(int): void</text><text x="5.5" y="475.5">+ setCurrentMultiplier(int): void</text><text x="5.5" y="489.5">+ setCurrentOffset(int): void</text></g><path d="M 650 336 L 650 310 L 910 310 L 910 336" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 650 336 L 650 470 L 910 470 L 910 336" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 650 336 L 910 336" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="779.5" y="327.5">Battery</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-654-341-252-84-0)" font-size="12px"><text x="655.5" y="353.5">+ capacity: float</text><text x="655.5" y="367.5">+ dischargeTime: uint32_t</text><text x="655.5" y="381.5">+ cutoffVoltage: SetValue</text><text x="655.5" y="395.5">+ dischargeCurrent: SetValue</text><text x="655.5" y="409.5">+ changedVariable: BatteryChangedVariable</text></g><path d="M 650 424 L 910 424" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-654-433-252-42-0)" font-size="12px"><text x="655.5" y="445.5">+ Battery()</text><text x="655.5" y="459.5">+ displayCapacity(LiquidCrystal_I2C&amp;): void</text></g><path d="M 950 26 L 950 0 L 1220 0 L 1220 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 950 26 L 950 290 L 1220 290 L 1220 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 950 26 L 1220 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1084.5" y="17.5">Controls</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-954-31-262-114-0)" font-size="12px"><text x="955.5" y="43.5">+ dac: Adafruit_MCP4725</text><text x="955.5" y="57.5">+ calibration: DacCalibration</text><text x="955.5" y="71.5">+ measurements: Measurements&amp;</text><text x="955.5" y="85.5">- fanspeed: int</text><text x="955.5" y="99.5">- lowTemperatureThreshold: int</text><text x="955.5" y="113.5">- highTemperatureThreshold: int</text><text x="955.5" y="127.5">- loadIsOn: bool</text></g><path d="M 950 144 L 1220 144" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-954-153-262-142-0)" font-size="12px"><text x="955.5" y="165.5">+ Controls(measurements_: Measurements&amp;)</text><text x="955.5" y="179.5">+ fanControll(): void</text><text x="955.5" y="193.5">+ loadOn(lcd: LiquidCrystal_I2C&amp;): void</text><text x="955.5" y="207.5">+ loadOff(lcd: LiquidCrystal_I2C&amp;): void</text><text x="955.5" y="221.5">+ loadOnOffToggle(lcd: LiquidCrystal_I2C&amp;): void</text><text x="955.5" y="235.5">+ regulateCurrent(setCurrent: float): void</text><text x="955.5" y="249.5">+ regulatePower(setPower: float): void</text><text x="955.5" y="263.5">+ regulateResistance(setResistance: float): void</text><text x="955.5" y="277.5">+ isLoadOn(): bool</text></g><path d="M 950 326 L 950 300 L 1220 300 L 1220 326" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 950 326 L 950 610 L 1220 610 L 1220 326" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 950 326 L 1220 326" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1084.5" y="317.5">Transient</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-954-331-262-104-0)" font-size="12px"><text x="955.5" y="343.5">+ lowCurrent: SetValue</text><text x="955.5" y="357.5">+ highCurrent: SetValue</text><text x="955.5" y="371.5">+ pulseTime: SetValue</text><text x="955.5" y="385.5">- lastCurrent: bool</text><text x="955.5" y="399.5">- lastTime: uint32_t</text><text x="955.5" y="413.5">- changedVariable: TransientChangedVariable</text></g><path d="M 950 434 L 1220 434" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-954-443-262-172-0)" font-size="12px"><text x="955.5" y="455.5">+ Transient()</text><text x="955.5" y="469.5">+ continousMode(LiquidCrystal_I2C&amp;,</text><text x="955.5" y="483.5">    UserInput&amp;, Keypad&amp;, Encoder&amp;, </text><text x="955.5" y="497.5">    Measurements&amp;, Controls&amp;): int</text><text x="955.5" y="511.5">+ pulseMode(LiquidCrystal_I2C&amp;,</text><text x="955.5" y="525.5">    UserInput&amp;, Keypad&amp;, Encoder&amp;, </text><text x="955.5" y="539.5">    Measurements&amp;, Controls&amp;): int</text><text x="955.5" y="553.5">+ toggleMode(LiquidCrystal_I2C&amp;,</text><text x="955.5" y="567.5">    UserInput&amp;, Keypad&amp;, Encoder&amp;, </text><text x="955.5" y="581.5">    Measurements&amp;, Controls&amp;): int</text><text x="955.5" y="595.5">- toggleCurrent(Controls&amp;): void</text></g><path d="M 650 26 L 650 0 L 940 0 L 940 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 650 26 L 650 300 L 940 300 L 940 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 650 26 L 940 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="794.5" y="17.5">Measurements</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-654-31-282-114-0)" font-size="12px"><text x="655.5" y="43.5">+ voltage: float</text><text x="655.5" y="57.5">+ current: float</text><text x="655.5" y="71.5">+ power: float</text><text x="655.5" y="85.5">+ temperature: int</text><text x="655.5" y="99.5">+ calibration: AdcCalibration</text><text x="655.5" y="113.5">+ adc: Adafruit_ADS1115</text><text x="655.5" y="127.5">+ timer: MCP79410_Timer</text></g><path d="M 650 144 L 940 144" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-654-153-282-152-0)" font-size="12px"><text x="655.5" y="165.5">+ Measurements()</text><text x="655.5" y="179.5">+ update(): void</text><text x="655.5" y="193.5">+ displayMeasurements(lcd: LiquidCrystal_I2C&amp;,</text><text x="655.5" y="207.5">    loadIsOn: bool);</text><text x="655.5" y="221.5">+ measureVoltage(): float</text><text x="655.5" y="235.5">+ measureCurrent(): float</text><text x="655.5" y="249.5">+ measureTemperature(): int</text><text x="655.5" y="263.5">- display(lcd: LiquidCrystal_I2C&amp;, value: float,</text><text x="655.5" y="277.5">    numOfDigits: int, numOfDecimalPlaces: int): void</text><text x="655.5" y="291.5">- noLessThanZero(value: float&amp;): void</text></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>